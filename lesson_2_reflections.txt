What happens when you initialize a repository? Why do you need to do it?
    Git starts tracking all files in the repository when you initialize a repository allowing you to 
    save and track different versions.
    
How is the staging area different from the working directory and the repository?
What value do you think it offers?
    The staging area shows changes made to each file in the repository before making a commit. It allows you to 
    review the changes and only commit the ones that you want to make for that commit.

How can you use the staging area to make sure you have one commit per logical
change?
    Review all the changes to make find changes that are connected and use multiple commits if necessary to account
    for different logical changes

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    When you want to have several versions of the same game. Or you want to adapt anothers' project to a purpose.
    This allows us to keep different work streams seperate and safe.

How do the diagrams help you visualize the branch structure?
    It shows how different branches and commits are related to each other.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?